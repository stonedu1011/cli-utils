#!/bin/bash

LAUNCHD_SERVICES=(
  "homebrew.mxcl.redis" 
  "homebrew.mxcl.mongodb"
)

CONTAINER_DATA_GROUP="rpil"
CONTAINER_DATA_PATH="/usr/local/var/dev/$CONTAINER_DATA_GROUP"

env_info() {
  echo_info "Dev Environment for RPIL"
  printf "%25s %25s %25s \n" "Component/Service" "Version" "Containerization"
  printf "%25s %25s %25s \n" "MongoDB" "3.2+ or Installed" "Supported"
  printf "%25s %25s %25s \n" "Redis" "3.0+ or Installed" "Supported"
  printf "%25s %25s %25s \n" "Vault" "Latest or Installed" "Supported"
}

env_start() {
  env_info
  for service in "${LAUNCHD_SERVICES[@]}"; do
    launchctl start $service
  done
  echo_info "Done"
	
  # launchctl start homebrew.mxcl.rabbitmq
}

env_stop() {
  env_info
  for service in "${LAUNCHD_SERVICES[@]}"; do
    launchctl stop $service
  done
  echo_info "Done" 
}

env_restart() {
  env_info
  for service in "${LAUNCHD_SERVICES[@]}"; do
    launchctl stop $service
  done
  
  for service in "${LAUNCHD_SERVICES[@]}"; do
    launchctl start $service
  done
  echo_info "Done"
}

env_start_docker() {
  env_info
  docker_run_consul
  docker_run_mongo
  docker_run_redis
  docker_run_vault
  echo_info "Done"
}

env_stop_docker() {
  env_info
  docker_stop_container "consul"
  docker_stop_container "mongo"
  docker_stop_container "redis"
  docker_stop_container "vault"
  
  docker_remove_container "consul"
  docker_remove_container "mongo"
  docker_remove_container "redis"
  docker_remove_container "vault"
}

env_restart_docker() {
  env_info
  docker_stop_container "consul"
  docker_stop_container "mongo"
  docker_stop_container "redis"
  docker_stop_container "vault"
  
  docker_run_consul
  docker_run_mongo
  docker_run_redis
  docker_run_vault
  echo_info "Done"
}

docker_run_consul() {
  docker_prepare_run "consul" || return 1
  
  local data_path="$CONTAINER_DATA_PATH/consul"
  create_directory_if_absent "$data_path"
  
  echo_info "Starting Consul ..."

  docker run -d --name local_consul \
    -p 8300:8300/tcp \
    -p 8400:8400/tcp \
    -p 8301-8302:8301-8302/tcp -p 8301-8302:8301-8302/udp \
    -p 8500:8500/tcp \
    -p 8600:8600/tcp -p 8600:8600/udp \
    -v $data_path:/consul/data \
    consul:latest \
    agent -server -ui \
     -client 0.0.0.0 \
    -bind=127.0.0.1 \
    -retry-join=127.0.0.1 \
    #
}

docker_run_mongo() {
  docker_prepare_run "mongo" || return 1
  
  local data_path="$CONTAINER_DATA_PATH/mongodb"
  create_directory_if_absent "$data_path"
  
  echo_info "Starting MongoDB ..."
  
  docker run -d --name local_mongo \
    -p 27017:27017 \
    -v $data_path:/data/db \
    mongo:3.2 \
    # 
}

docker_run_redis() {
  docker_prepare_run "redis" || return 1
  
  echo_info "Starting Redis without volumn mounts ..."
  docker run -d --name local_redis \
    -p 6379:6379 \
    redis:3.2-alpine \
    #
}

docker_run_vault() {
  docker_prepare_run "vault" || return 1
  
  local data_path="$CONTAINER_DATA_PATH/vault"
  create_directory_if_absent "$data_path"
  
  echo_info "Starting Vault ..."
  docker run -d --name local_vault \
    -p 8200:8200 \
    -v $data_path:/vault/file \
    -e "VAULT_DEV_ROOT_TOKEN_ID=$VAULT_DEV_ROOT_TOKEN_ID" \
    -e "VAULT_DEV_LISTEN_ADDRESS=$VAULT_DEV_LISTEN_ADDRESS" \
    -e 'VAULT_LOCAL_CONFIG={"backend":{"console":{"path":"/vault/file"}},"disable_mlock":true}' \
    vault:latest \
    #
}

